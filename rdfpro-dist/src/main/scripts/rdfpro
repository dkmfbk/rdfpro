#!/bin/bash

# Script environment:
#   JAVA_HOME: the defined Java runtime
#   JAVA_OPTS: JVM options.
#       Es: export JAVA_OPTS="-Xmx6G -Xms1G -server"
#   RDFPRO_CMD_SORT: native command to process sorting.
#       Es: rdfpro.cmd.sort="sort -S 8192M --batch-size=64 --compress-program=lz4 -T $SW_HOME/tmp"
#   RDFPRO_CMD_GZIP: native command to process gzipped streams.
#       Es: rdfpro.cmd.gzip="pigz -p 4 -b 4096"
#   RDFPRO_CMD_BZIP2: native command to process bzip2 streams.
#       Es: rdfpro.cmd.bzip2="pbzip2"
#   RDFPRO_CLASSPATH: additional classpath entries for RDFpro (separated by colon)
#   RDFPRO_GROOVY_CLASSPATH: the classpath for Groovy scripts

# resolve program name in case it is a symbolic link
_PRG="$0"
while [ -h "$_PRG" ]; do
  _PRG_OLD=$_PRG
  _PRG="$(readlink "$_PRG")"
  [[ $_PRG != /* ]] && _PRG="$( cd -P "$( dirname "$_PRG_OLD" )" && pwd )/$_PRG"
done
_BASEDIR="$( cd -P "$( dirname "$_PRG" )" && pwd )"


# Retrieve the path of the java executable.
_JAVA="java"
if [ -n "$JAVA_HOME"  ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        _JAVA="$JAVA_HOME/jre/sh/java"
    elif [ -x "$JAVA_HOME/bin/java" ] ; then
        _JAVA="$JAVA_HOME/bin/java"
    fi
fi

# Build groovy classpath.
OLD_CLASSPATH=$RDFPRO_GROOVY_CLASSPATH
RDFPRO_GROOVY_CLASSPATH=$BASEDIR/groovy
if [ -n "$OLD_CLASSPATH" ] ; then
    export RDFPRO_GROOVY_CLASSPATH=$RDFPRO_GROOVY_CLASSPATH:$OLD_CLASSPATH
fi

# Enable ANSI escape sequences (for colored text and status messages)
export RDFPRO_ANSI_ENABLED=true

# Execute the program
exec $_JAVA $JAVA_OPTS -Djdk.xml.entityExpansionLimit=0 -cp "$RDFPRO_CLASSPATH:$_BASEDIR/etc:$_BASEDIR/lib/*" eu.fbk.rdfpro.tool.Main "$@"
